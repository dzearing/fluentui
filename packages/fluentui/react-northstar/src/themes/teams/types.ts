import type { TextAreaStylesProps } from './../../components/TextArea/TextArea';
import type {
  ColorScheme,
  ColorSchemeMapping,
  ColorVariants,
  StrictColorScheme,
  StrictColorSchemeMapping,
  PrimitiveColors,
} from '../types';
import type { AccordionContentStylesProps } from '../../components/Accordion/AccordionContent';
import type { AccordionStylesProps } from '../../components/Accordion/Accordion';
import type { AccordionTitleStylesProps } from '../../components/Accordion/AccordionTitle';
import type { CarouselNavigationItemStylesProps } from '../../components/Carousel/CarouselNavigationItem';
import type { AlertStylesProps } from '../../components/Alert/Alert';
import type { AnimationProps } from '../../components/Animation/Animation';
import type { AttachmentProps } from '../../components/Attachment/Attachment';
import type { AttachmentActionStylesProps } from '../../components/Attachment/AttachmentAction';
import type { AttachmentDescriptionStylesProps } from '../../components/Attachment/AttachmentDescription';
import type { AttachmentHeaderStylesProps } from '../../components/Attachment/AttachmentHeader';
import type { AttachmentIconStylesProps } from '../../components/Attachment/AttachmentIcon';
import type { AvatarStylesProps } from '../../components/Avatar/Avatar';
import type { AvatarImageStylesProps } from '../../components/Avatar/AvatarImage';
import type { AvatarStatusStylesProps } from '../../components/Avatar/AvatarStatus';
import type { AvatarStatusIconStylesProps } from '../../components/Avatar/AvatarStatusIcon';
import type { BoxStylesProps } from '../../components/Box/Box';
import type { ButtonGroupProps } from '../../components/Button/ButtonGroup';
import type { ButtonStylesProps } from '../../components/Button/Button';
import type { ButtonContentStylesProps } from '../../components/Button/ButtonContent';
import type { ChatItemStylesProps } from '../../components/Chat/ChatItem';
import type { ChatMessageStylesProps } from '../../components/Chat/ChatMessage';
import type { ChatStylesProps } from '../../components/Chat/Chat';
import type { CheckboxStylesProps } from '../../components/Checkbox/Checkbox';
import type { DividerStylesProps } from '../../components/Divider/Divider';
import type { DividerContentStylesProps } from '../../components/Divider/DividerContent';
import type { DialogProps } from '../../components/Dialog/Dialog';
import type { DropdownProps } from '../../components/Dropdown/Dropdown';
import type { DropdownSearchInputStylesProps } from '../../components/Dropdown/DropdownSearchInput';
import type { DropdownSelectedItemStylesProps } from '../../components/Dropdown/DropdownSelectedItem';
import type { EmbedStylesProps } from '../../components/Embed/Embed';
import type { FlexItemStylesProps } from '../../components/Flex/FlexItem';
import type { FlexStylesProps } from '../../components/Flex/Flex';
import type { FormStylesProps } from '../../components/Form/Form';
import type { FormFieldStylesProps } from '../../components/Form/FormField';
import type { FormLabelStylesProps } from '../../components/Form/FormLabel';
import type { FormMessageStylesProps } from '../../components/Form/FormMessage';
import type { GridStylesProps } from '../../components/Grid/Grid';
import type { HeaderDescriptionStylesProps } from '../../components/Header/HeaderDescription';
import type { HeaderStylesProps } from '../../components/Header/Header';
import type { ImageStylesProps } from '../../components/Image/Image';
import type { InputStylesProps } from '../../components/Input/Input';
import type { ItemLayoutProps } from '../../components/ItemLayout/ItemLayout';
import type { LabelStylesProps } from '../../components/Label/Label';
import type { LayoutProps } from '../../components/Layout/Layout';
import type { ListStylesProps } from '../../components/List/List';
import type { ListItemStylesProps } from '../../components/List/ListItem';
import type { LoaderStylesProps } from '../../components/Loader/Loader';
import type { MenuItemStylesProps } from '../../components/Menu/MenuItem';
import type { MenuItemIconStylesProps } from '../../components/Menu/MenuItemIcon';
import type { MenuItemIndicatorStylesProps } from '../../components/Menu/MenuItemIndicator';
import type { MenuItemContentStylesProps } from '../../components/Menu/MenuItemContent';
import type { MenuItemWrapperStylesProps } from '../../components/Menu/MenuItemWrapper';
import type { MenuStylesProps } from '../../components/Menu/Menu';
import type { MenuDividerStylesProps } from '../../components/Menu/MenuDivider';
import type { PopupContentStylesProps } from '../../components/Popup/PopupContent';
import type { PortalProps } from '../../components/Portal/Portal';
import type { RadioGroupItemStylesProps } from '../../components/RadioGroup/RadioGroupItem';
import type { RadioGroupProps } from '../../components/RadioGroup/RadioGroup';
import type { ReactionStylesProps } from '../../components/Reaction/Reaction';
import type { ReactionGroupStylesProps } from '../../components/Reaction/ReactionGroup';
import type { SegmentStylesProps } from '../../components/Segment/Segment';
import type { SliderStylesProps } from '../../components/Slider/Slider';
import type { StatusStylesProps } from '../../components/Status/Status';
import type { TextStylesProps } from '../../components/Text/Text';
import type { ToolbarDividerStylesProps } from '../../components/Toolbar/ToolbarDivider';
import type { ToolbarItemStylesProps } from '../../components/Toolbar/ToolbarItem';
import type { ToolbarCustomItemStylesProps } from '../../components/Toolbar/ToolbarCustomItem';
import type { ToolbarMenuItemStylesProps } from '../../components/Toolbar/ToolbarMenuItem';
import type { ToolbarMenuItemContentStylesProps } from '../../components/Toolbar/ToolbarMenuItemContent';
import type { ToolbarMenuDividerStylesProps } from '../../components/Toolbar/ToolbarMenuDivider';
import type { ToolbarMenuRadioGroupStylesProps } from '../../components/Toolbar/ToolbarMenuRadioGroup';
import type { ToolbarMenuStylesProps } from '../../components/Toolbar/ToolbarMenu';
import type { ToolbarStylesProps } from '../../components/Toolbar/Toolbar';
import type { ToolbarRadioGroupStylesProps } from '../../components/Toolbar/ToolbarRadioGroup';
import type { TooltipContentStylesProps } from '../../components/Tooltip/TooltipContent';
import type { VideoStylesProps } from '../../components/Video/Video';
import type { TreeItemStylesProps } from '../../components/Tree/TreeItem';
import type { TreeTitleStylesProps } from '../../components/Tree/TreeTitle';
import type { TableStylesProps } from '../../components/Table/Table';
import type { TableRowStylesProps } from '../../components/Table/TableRow';
import type { TableCellStylesProps } from '../../components/Table/TableCell';
import type { CardStylesProps } from '../../components/Card/Card';
import type { CardPreviewStylesProps } from '../../components/Card/CardPreview';
import type { CardTopControlsStylesProps } from '../../components/Card/CardTopControls';
import type { CardHeaderStylesProps } from '../../components/Card/CardHeader';
import type { CardBodyStylesProps } from '../../components/Card/CardBody';
import type { CardFooterStylesProps } from '../../components/Card/CardFooter';
import type { CardExpandableBoxStylesProps } from '../../components/Card/CardExpandableBox';
import type { SvgIconStylesProps } from '../../components/SvgIcon/SvgIcon';
import type { SplitButtonStylesProps } from '../../components/SplitButton/SplitButton';
import type { CarouselNavigationStylesProps } from '../../components/Carousel/CarouselNavigation';
import type { CarouselItemStylesProps } from '../../components/Carousel/CarouselItem';
import type { CarouselStylesProps } from '../../components/Carousel/Carousel';
import type { SkeletonStylesProps } from '../../components/Skeleton/Skeleton';
import type { SkeletonTextStylesProps } from '../../components/Skeleton/SkeletonText';
import type { SkeletonShapeStylesProps } from '../../components/Skeleton/SkeletonShape';
import type { SkeletonLineStylesProps } from '../../components/Skeleton/SkeletonLine';
import type { SkeletonAvatarStylesProps } from '../../components/Skeleton/SkeletonAvatar';
import type { SkeletonInputStylesProps } from '../../components/Skeleton/SkeletonInput';
import type { SplitButtonToggleStylesProps } from '../../components/SplitButton/SplitButtonToggle';
import type { AttachmentBodyStylesProps } from '../../components/Attachment/AttachmentBody';
import type { PillStylesProps } from '../../components/Pill/Pill';
import type { PillContentStylesProps } from '../../components/Pill/PillContent';
import type { PillGroupStylesProps } from '../../components/Pill/PillGroup';
import type { PillImageStylesProps } from '../../components/Pill/PillImage';
import type { PillIconStylesProps } from '../../components/Pill/PillIcon';

export type TeamsThemeStylesProps = {
  Accordion: AccordionStylesProps;
  AccordionContent: AccordionContentStylesProps;
  AccordionTitle: AccordionTitleStylesProps;
  Alert: AlertStylesProps;
  Animation: AnimationProps;
  Attachment: AttachmentProps;
  AttachmentAction: AttachmentActionStylesProps;
  AttachmentBody: AttachmentBodyStylesProps;
  AttachmentDescription: AttachmentDescriptionStylesProps;
  AttachmentHeader: AttachmentHeaderStylesProps;
  AttachmentIcon: AttachmentIconStylesProps;
  Avatar: AvatarStylesProps;
  AvatarImage: AvatarImageStylesProps;
  AvatarStatus: AvatarStatusStylesProps;
  AvatarStatusIcon: AvatarStatusIconStylesProps;
  Button: ButtonStylesProps;
  Box: BoxStylesProps;
  ButtonContent: ButtonContentStylesProps;
  ButtonGroup: ButtonGroupProps;
  Carousel: CarouselStylesProps;
  CarouselItem: CarouselItemStylesProps;
  Chat: ChatStylesProps;
  ChatItem: ChatItemStylesProps;
  ChatMessage: ChatMessageStylesProps;
  CarouselNavigation: CarouselNavigationStylesProps;
  Checkbox: CheckboxStylesProps;
  Divider: DividerStylesProps;
  DividerContent: DividerContentStylesProps;
  Dialog: DialogProps;
  Dropdown: DropdownProps;
  DropdownSearchInput: DropdownSearchInputStylesProps;
  DropdownSelectedItem: DropdownSelectedItemStylesProps;
  Embed: EmbedStylesProps;
  Flex: FlexStylesProps;
  FlexItem: FlexItemStylesProps;
  Form: FormStylesProps;
  FormField: FormFieldStylesProps;
  FormLabel: FormLabelStylesProps;
  FormMessage: FormMessageStylesProps;
  Grid: GridStylesProps;
  Header: HeaderStylesProps;
  HeaderDescription: HeaderDescriptionStylesProps;
  SvgIcon: SvgIconStylesProps;
  Image: ImageStylesProps;
  Input: InputStylesProps;
  ItemLayout: ItemLayoutProps;
  Label: LabelStylesProps;
  Layout: LayoutProps;
  List: ListStylesProps;
  ListItem: ListItemStylesProps;
  Loader: LoaderStylesProps;
  Menu: MenuStylesProps;
  MenuItem: MenuItemStylesProps;
  MenuItemIcon: MenuItemIconStylesProps;
  MenuItemIndicator: MenuItemIndicatorStylesProps;
  MenuItemContent: MenuItemContentStylesProps;
  MenuItemWrapper: MenuItemWrapperStylesProps;
  MenuDivider: MenuDividerStylesProps;
  Pill: PillStylesProps;
  PillGroup: PillGroupStylesProps;
  PillContent: PillContentStylesProps;
  PillIcon: PillIconStylesProps;
  PillImage: PillImageStylesProps;
  Portal: PortalProps;
  PopupContent: PopupContentStylesProps;
  RadioGroup: RadioGroupProps;
  RadioGroupItem: RadioGroupItemStylesProps;
  Reaction: ReactionStylesProps;
  ReactionGroup: ReactionGroupStylesProps;
  Segment: SegmentStylesProps;
  Slider: SliderStylesProps;
  Skeleton: SkeletonStylesProps;
  SkeletonLine: SkeletonLineStylesProps;
  SkeletonShape: SkeletonShapeStylesProps;
  SkeletonAvatar: SkeletonAvatarStylesProps;
  SkeletonInput: SkeletonInputStylesProps;
  SkeletonText: SkeletonTextStylesProps;
  SplitButton: SplitButtonStylesProps;
  SplitButtonToggle: SplitButtonToggleStylesProps;
  Status: StatusStylesProps;
  Toolbar: ToolbarStylesProps;
  ToolbarCustomItem: ToolbarCustomItemStylesProps;
  ToolbarItem: ToolbarItemStylesProps;
  ToolbarDivider: ToolbarDividerStylesProps;
  ToolbarRadioGroup: ToolbarRadioGroupStylesProps;
  ToolbarMenu: ToolbarMenuStylesProps;
  ToolbarMenuItem: ToolbarMenuItemStylesProps;
  ToolbarMenuItemContent: ToolbarMenuItemContentStylesProps;
  ToolbarMenuDivider: ToolbarMenuDividerStylesProps;
  ToolbarMenuRadioGroup: ToolbarMenuRadioGroupStylesProps;
  TooltipContent: TooltipContentStylesProps;
  Text: TextStylesProps;
  TextArea: TextAreaStylesProps;
  TreeItem: TreeItemStylesProps;
  TreeTitle: TreeTitleStylesProps;
  Video: VideoStylesProps;
  Table: TableStylesProps;
  TableRow: TableRowStylesProps;
  TableCell: TableCellStylesProps;
  Card: CardStylesProps;
  CardPreview: CardPreviewStylesProps;
  CardTopControls: CardTopControlsStylesProps;
  CardHeader: CardHeaderStylesProps;
  CardBody: CardBodyStylesProps;
  CardFooter: CardFooterStylesProps;
  CardExpandableBox: CardExpandableBoxStylesProps;
  CarouselNavigationItem: CarouselNavigationItemStylesProps;
};

export type TeamsContextualColors = {
  brand: ColorVariants;
};

export type TeamsNaturalColors = {
  grey: ColorVariants;
  green: ColorVariants;
  orange: ColorVariants;
  red: ColorVariants;
  yellow: ColorVariants;
  pink: ColorVariants;
};

export type TeamsTransparentColors = {
  silver: ColorVariants;
  ruby: ColorVariants;
  onyx: ColorVariants;
  amethyst: ColorVariants;
};

export type TeamsCategoryColors = {
  redDark: ColorVariants;
  red: ColorVariants;
  orangeDark: ColorVariants;
  orange: ColorVariants;
  orangeLight: ColorVariants;
  yellowDark: ColorVariants;
  yellow: ColorVariants;
  brown: ColorVariants;
  oliveDark: ColorVariants;
  olive: ColorVariants;
  greenDark: ColorVariants;
  green: ColorVariants;
  tealDark: ColorVariants;
  teal: ColorVariants;
  tealLight: ColorVariants;
  blueDark: ColorVariants;
  blue: ColorVariants;
  purpleDark: ColorVariants;
  purple: ColorVariants;
  maroon: ColorVariants;
  pink: ColorVariants;
  smokeDark: ColorVariants;
  smokeLight: ColorVariants;
  steelDark: ColorVariants;
  steelLight: ColorVariants;
  neon: ColorVariants;
};

export type TeamsCategoryColorNames = keyof TeamsCategoryColors;

export type TeamsCategoryColorSchemeMapping = ColorSchemeMapping<Partial<ColorScheme>, TeamsCategoryColorNames>;

export type TeamsColorNames = keyof (TeamsContextualColors &
  TeamsNaturalColors &
  PrimitiveColors &
  TeamsTransparentColors);

export type TeamsSchemeMappingWithAreas<TAreas extends string> = StrictColorSchemeMapping<
  StrictColorScheme<TAreas>,
  TeamsColorNames
>;
